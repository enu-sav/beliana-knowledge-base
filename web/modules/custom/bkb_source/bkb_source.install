<?php

/**
 * @file
 * Install, update and uninstall functions.
 */

/**
 * Create "citation" for source entity
 */
function bkb_source_update_10001() {
  \Drupal::service('bkb_base.helper')
    ->installFieldStorageDefinition('bkb_source', 'source', [
      'citation',
    ]);
}

/**
 * Create "pages" for group entity
 */
function bkb_source_update_10002() {
  \Drupal::service('bkb_base.helper')
    ->installFieldStorageDefinition('bkb_source', 'source_group', [
      'pages',
    ]);
}

/**
 * Create "index" for group entity
 */
function bkb_source_update_10003() {
  \Drupal::service('bkb_base.helper')
    ->installFieldStorageDefinition('bkb_source', 'source_group', [
      'index',
    ]);
}

/**
 * Set default value for index fields
 */
function bkb_source_update_10004() {
  $comments = \Drupal::service('entity_type.manager')
    ->getStorage('source_comment')
    ->loadMultiple();

  if (empty($comments)) {
    return;
  }

  foreach ($comments as $comment) {
    $index = 1;
    $groups = $comment->get('sources')->referencedEntities();

    foreach ($groups as $group) {
      if ($group->get('index')->isEmpty()) {
        $group->set('index', $index);
        $group->save();
        $index++;
      }
    }
  }
}

/**
 * Create "source_url" for source entity
 */
function bkb_source_update_10005() {
  \Drupal::service('bkb_base.helper')
    ->installFieldStorageDefinition('bkb_source', 'source', [
      'source_url',
    ]);
}

 * Change source label field from varchar to text while preserving data.
 */
function bkb_source_update_10005() {
  \Drupal::service('bkb_base.helper')->changeFieldType('source', 'label', [
    'type' => 'text',
    'size' => 'medium',
    'not null' => FALSE,
    'description' => 'The label of the source.',
  ]);
}
