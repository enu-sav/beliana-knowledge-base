diff --git a/src/Plugin/Field/FieldWidget/InlineEntityFormSimple.php b/src/Plugin/Field/FieldWidget/InlineEntityFormSimple.php
index 51e0acc..f6e04e6 100644
--- a/src/Plugin/Field/FieldWidget/InlineEntityFormSimple.php
+++ b/src/Plugin/Field/FieldWidget/InlineEntityFormSimple.php
@@ -10,6 +10,10 @@ use Drupal\Core\Field\WidgetBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element;
 use Drupal\inline_entity_form\TranslationHelper;
+use Drupal\Core\TypedData\ComplexDataInterface;
+use Drupal\Core\TypedData\Exception\MissingDataException;
+use Drupal\Core\TypedData\ListInterface;
+use Drupal\Core\TypedData\TypedDataInterface;

 /**
  * Simple inline widget.
@@ -37,15 +41,15 @@ class InlineEntityFormSimple extends InlineEntityFormBase {
     $form_state->set(['inline_entity_form', $ief_id], []);

     $element = [
-      '#type' => $this->getSetting('collapsible') ? 'details' : 'fieldset',
-      '#field_title' => $this->fieldDefinition->getLabel(),
-      '#after_build' => [
-        [get_class($this), 'removeTranslatabilityClue'],
-      ],
-    ] + $element;
+        '#type' => $this->getSetting('collapsible') ? 'details' : 'fieldset',
+        '#field_title' => $this->fieldDefinition->getLabel(),
+        '#after_build' => [
+          [get_class($this), 'removeTranslatabilityClue'],
+        ],
+      ] + $element;
     if ($element['#type'] == 'details') {
       // If there's user input, keep the details open. Otherwise, use settings.
-      $element['#open'] = $form_state->getUserInput() ?: !$this->getSetting('collapsed');
+      // $element['#open'] = $form_state->getUserInput() ?: !$this->getSetting('collapsed');
     }

     $item = $items->get($delta);
@@ -90,17 +94,39 @@ class InlineEntityFormSimple extends InlineEntityFormBase {
     // If we're using unlimited cardinality we don't display one empty item.
     // Form validation will kick in if left empty which essentially means
     // people won't be able to submit without creating another entity.
-    if (!$form_state->isSubmitted() && $element['#cardinality'] == FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED && $element['#max_delta'] > 0) {
+    $user_input = $form_state->getUserInput();
+    $adding_element_to_this_item = isset($user_input['_triggering_element_name'], $element['add_more']['#name'])
+      && $user_input['_triggering_element_name'] === $element['add_more']['#name'];
+
+    if (!$form_state->isSubmitted()
+      && $element['#cardinality'] == FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED
+      && $element['#max_delta'] > 0
+      // Don't prevent users from intentionally adding items.
+      && !$adding_element_to_this_item
+    ) {
       $max = $element['#max_delta'];
-      unset($element[$max]);
-      $element['#max_delta'] = $max - 1;
-      $items->removeItem($max);
-      // Decrement the items count.
-      $field_name = $element['#field_name'];
-      $parents = $element[0]['#field_parents'];
-      $field_state = static::getWidgetState($parents, $field_name, $form_state);
-      $field_state['items_count']--;
-      static::setWidgetState($parents, $field_name, $form_state, $field_state);
+      if (isset($element[$max]['#field_parents'])) {
+        $element_input = NestedArray::getValue($user_input, array_merge(
+          $element[$max]['#field_parents'],
+          [$element['#field_name']],
+          [$max]
+        ));
+      }
+      else {
+        $element_input = [];
+      }
+      // Only remove empty elements.
+      if (empty($element_input) && $this->isItemEmpty($items, $max)) {
+        unset($element[$max]);
+        $element['#max_delta'] = $max - 1;
+        $items->removeItem($max);
+        // Decrement the items count.
+        $field_name = $element['#field_name'];
+        $parents = $element[0]['#field_parents'];
+        $field_state = static::getWidgetState($parents, $field_name, $form_state);
+        $field_state['items_count']--;
+        static::setWidgetState($parents, $field_name, $form_state, $field_state);
+      }
     }

     // Remove add options if the user cannot add new entities.
@@ -206,6 +232,35 @@ class InlineEntityFormSimple extends InlineEntityFormBase {
     return TRUE;
   }

+  /**
+   * Check if specific item is empty.
+   *
+   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   *   Item list.
+   * @param int $index
+   *   Item index.
+   *
+   * @return bool
+   *   TRUE if item is empty, false otherwise.
+   */
+  protected function isItemEmpty(FieldItemListInterface $items, $index): bool {
+    try {
+      $item = $items->get($index);
+      if ($item instanceof ComplexDataInterface || $item instanceof ListInterface) {
+        return $item->isEmpty();
+      }
+
+      if ($item instanceof TypedDataInterface) {
+        return $item->getValue() === NULL;
+      }
+      // Other items are treated as empty if they have no value only.
+      return $item === NULL;
+    }
+    catch (MissingDataException $exception) {
+      return TRUE;
+    }
+  }
+
   /**
    * Gets the bundle for the inline entity.
    *
